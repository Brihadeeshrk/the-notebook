[{"content":"## Welcome to RTLBook\n\nThis is an interactive coding environment where you can explore the following libraries:\n\n| Name      | Docs |\n| ----------- | ----------- |\n| React      | [docs](https://reactjs.org/)       |\n| @testing-library/react   |  [docs](https://testing-library.com/docs/react-testing-library/intro/)        |\n| @testing-library/user-event |   [docs](https://testing-library.com/docs/user-event/intro)  |\n| @testing-library/react-hooks |  [docs](https://github.com/testing-library/react-hooks-testing-library)  |\n| @testing-library/jest-dom | [docs](https://github.com/testing-library/jest-dom#custom-matchers) |\n| expect |  [docs](https://jestjs.io/docs/expect)  |\n\nIn between each 'cell' there are buttons that can add in a new code editor or a text section.","type":"text","id":"12frm"},{"content":"import { render, screen } from '@testing-library/react';\nimport user from '@testing-library/user-event';\n\nconst ColorList = () => {\n  return (\n    <ul>\n      <li>Red</li>\n      <li>Blue</li>\n      <li>Green</li>\n    </ul>\n  )\n}\n\nrender(<ColorList />);","type":"code","id":"az9bh"},{"content":"test(\"how getBy, findBy and queryBy react to finding 0 elements\", async () => {\n  render(<ColorList />)\n\n  // getBy\n  expect(() => screen.getByRole(\"textbox\")).toThrow()\n  // queryBy\n  expect(screen.queryByRole(\"textbox\")).toEqual(null)\n  // findBy\n  let errorThrown = false\n  try {\n    await screen.findByRole('textbox')\n  } catch (error) {\n    errorThrown = true\n  }\n\n  expect(errorThrown).toEqual(true)\n})","type":"code","id":"brsm3"},{"content":"test(\"how getBy, findBy and queryBy react to finding 1 element\", async () => {\n  render(<ColorList />)\n\n  expect(screen.getByRole('list')).toBeInTheDocument()\n\n  expect(screen.queryByRole('list')).toBeInTheDocument()\n\n  expect(\n    await screen.findByRole('list')).toBeInTheDocument()\n})","type":"code","id":"er8qv"},{"content":"test('how getBy, findBy and queryBy react to finding more than 1 element', async () => {\n  render(<ColorList />);\n\n  // getBy\n  expect(() => screen.getByRole('listitem')).toThrow();\n  // queryBy\n  expect(() => screen.queryByRole('listitem')).toThrow();\n  // findBy\n  let errorThrown = false;\n  try {\n    await screen.findByRole('listitem');\n  } catch (error) {\n    errorThrown = true;\n  }\n\n  expect(errorThrown).toEqual(true);\n});","type":"code","id":"qx7ag"},{"content":"test('getAllBy, queryAllBy and findAllBy', async () => {\n  render(<ColorList />);\n\n  expect(screen.getAllByRole('listitem')).toHaveLength(3);\n\n  expect(screen.queryAllByRole('listitem')).toHaveLength(3);\n\n  expect(await screen.findAllByRole('listitem')).toHaveLength(3);\n});","type":"code","id":"3e6kk"}]